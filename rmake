#!/usr/bin/env ruby

require "optparse"

options = {}
OptionParser.new do |o|
  o.banner = "Usage: ./rmake [options] [name]"
  o.on("-p", "Program flash") {|v| options[:program] = v }
  o.on("-m", "Make") {|v| options[:make] = v }
  o.on("-r", "Remove .elf, .hex, .o") {|v| options[:remove] = v}
  o.on("-V", "Do not verify") {|v| options[:verify] = v}
end.parse!

name = ARGV.first

if options[:remove]
  print "Removing..."
  ["elf", "hex", "o"].each {|ext| 
    Dir["**/*.#{ext}"].each {|f| 
      print f + " "
      File.delete(f)
    }
  }
  puts "done."
end

if options[:make]
  x = File.read('Makefile').sub(/PROGNAME=\w*/, "PROGNAME=#{name}")
  File.open('Makefile', 'w') do |f|
    f.puts x 
  end
  make_output = `make 2>&1`
  puts make_output
end
if make_output and make_output.downcase =~ /error/
  puts "ERROR"
elsif options[:program]
  puts `avrdude #{options[:verify] ? '-V ' : ''}-c stk500v2 -P avrdoper -p atmega32 -U flash:w:#{name}.hex`
end

